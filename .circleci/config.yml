version: 2.1
commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          command: |
            aws cloudformation delete-stack --stack-name "udapeople-frontendfrontend-${CIRCLE_WORKFLOW_ID}"
jobs:
  build-frontend:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Install front end node modules
          command: |
            cd frontend
            npm install
      - run:
          name: Build front end code
          command: |
            cd frontend
            npm run build

  test-frontend:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Install front end node modules
          command: |
            cd frontend
            npm install
      - run:
          name: Run frontend test script
          command: |
            cd frontend
            npm run test
  audit-check-frontend:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Audit check front end code
          command: |
            cd frontend
            npm audit fix --audit-level=critical --force

  build-backend:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Install back end node modules
          command: |
            cd backend
            npm install
      - run:
          name: Build backend code
          command: |
            cd backend
            npm run build

  test-backend:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Install back end node modules
          command: |
            cd backend
            npm install
      - run:
          name: Run backend test script
          command: |
            cd backend
            npm run test

  audit-check-backend:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Audit check back end code
          command: |
            cd backend
            npm audit fix --audit-level=critical --force

  promote-prod:
    docker:
        - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create cloud front infrastructure
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/cloudfront.yml \
              --stack-name "udapeople-cloudfront-${CIRCLE_WORKFLOW_ID}" \
              --parameter-overrides WorkflowID="udapeople-cloudfront-${CIRCLE_WORKFLOW_ID}"

  deploy:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      # - run:
      #     name: Create backend infrastructure
      #     command: |
      #       aws cloudformation deploy \
      #         --template-file .circleci/files/backend.yml \
      #         --stack-name "udapeople-backend-${CIRCLE_WORKFLOW_ID}" \
      #         --parameter-overrides ID="udapeople-${CIRCLE_WORKFLOW_ID}"
      - run:
          name: Create front end on aws
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/frontend.yml \
              --stack-name "udapeople-frontend-${CIRCLE_WORKFLOW_ID}" \
              --parameter-overrides ID="udapeople-frontendfrontend-${CIRCLE_WORKFLOW_ID}"
      # - run:
      #     name: Setup network on aws
      #     command: |
      #       aws cloudformation deploy \
      #         --template-file .circleci/files/network.yml \
      #         --stack-name "udapeople-network-${CIRCLE_WORKFLOW_ID}" \
      #         --parameter-overrides EnvironmentName="production"
      - destroy_environment:
        when: on_fail

workflows:
  my_workflow:
    jobs:
      # - build-frontend
      # - test-frontend:
      #     requires:
      #       - build-frontend
      # - audit-check-frontend:
      #     requires:
      #       - test-frontend
      # - build-backend:
      #     requires:
      #       - audit-check-frontend
      # - test-backend:
      #     requires:
      #       - build-backend
      # - audit-check-backend:
      #     requires:
      #       - test-backend

      - deploy
          # requires:
            # - audit-check-backend
            # - audit-check-frontend
